version: '3'

services:
  # service_1:
  #   image: golang:latest
  #   container_name: service_1
  #   volumes:
  #     - ../cmd/first-service:/app
  #   working_dir: /app
  #   command: go run main.go
  #   # depends_on:
      # - postgres
      # - kafka

  # service_2:
  #   image: golang:latest
  #   container_name: golang_service_2
  #   volumes:
  #     - ./golang_service_2:/app
  #   working_dir: /app
  #   command: go run main.go
  #   depends_on:
  #     - postgres
  #     - kafka

  # service_3:
  #   image: golang:latest
  #   container_name: golang_service_3
  #   volumes:
  #     - ./golang_service_3:/app
  #   working_dir: /app
  #   command: go run main.go
  #   depends_on:
  #     - postgres
  #     - kafka

  postgres_1:
    image: postgres:latest
    container_name: postgres
    volumes:
    - ./first-init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env.first
    ports:
      - 5433:5432

  # postgres_2:
  #   image: postgres:latest
  #   container_name: postgres_2
  #   environment:
  #     POSTGRES_DB: your_db_name_2
  #     POSTGRES_USER: your_db_user_2
  #     POSTGRES_PASSWORD: your_db_password_2

  # kafka:
  #   image: wurstmeister/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
